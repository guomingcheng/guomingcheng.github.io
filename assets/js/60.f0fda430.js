(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{431:function(t,s,a){"use strict";a.r(s);var n=a(46),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("p",[t._v("如果要构建自己的 dapp 应用，就需要使用官方整合的 web3.0.js 库，用于调用 abi 二机制接口，这样才能实现与以太坊节点通信，才能构建 dapp 应用")]),t._v(" "),a("h2",{attrs:{id:"solc-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solc-js"}},[t._v("#")]),t._v(" solc.js")]),t._v(" "),a("p",[t._v("这是一款编译器, 我们如果在本地编写 .sol 智能合约, 就需要使用 solc 编译器，把 sol 文件编译成二机制机器码与 abi 二进制接口")]),t._v(" "),a("blockquote",[a("h4",{attrs:{id:"安装-solc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-solc"}},[t._v("#")]),t._v(" "),a("div",{staticClass:"biaoti2"}),t._v(" 安装 solc")]),t._v(" "),a("p",[t._v("注意：在安装之前需要先安装 ndeo, 因为需要使用到 npm 命令。\n"),a("img",{attrs:{src:"/img/%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BB%A5%E5%A4%AA%E5%9D%8A/web3.0/web3.0-001.png",alt:"An image"}})]),t._v(" "),a("p",[t._v("注意：命令使用时，不是 solc, 而是 solcjs")])]),t._v(" "),a("h2",{attrs:{id:"web3-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web3-0"}},[t._v("#")]),t._v(" web3.0")]),t._v(" "),a("p",[t._v("web3.js 是一个 js 库, 他可以调用任何暴露出 RPC 层以太坊节点 abi 接口, 使的 dapp 应用与以太坊通信. web3.js 还内置了各种实用对象，其中就包含了 web.eth 对象，用于获得区块链的数据。")]),t._v(" "),a("blockquote",[a("h4",{attrs:{id:"安装-web3-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-web3-0"}},[t._v("#")]),t._v(" "),a("div",{staticClass:"biaoti2"}),t._v(" 安装 web3.0")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BB%A5%E5%A4%AA%E5%9D%8A/web3.0/web3.0-002.png",alt:"An image"}}),t._v("\n版本查看命令：npm list web3")])]),t._v(" "),a("h2",{attrs:{id:"二机制接口-abi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二机制接口-abi"}},[t._v("#")]),t._v(" 二机制接口（abi）")]),t._v(" "),a("p",[t._v("通过 web3.js 来调用以太坊智能合约的 abi 接口, 需当把智能合约编译成 json 数据, 用来在 js 代码中描述, 在这数据中每个对象都对应着一个共有的方法, 这个对象的属性分别是以下作用。")]),t._v(" "),a("blockquote",[a("h4",{attrs:{id:"js-描述一个-abi-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-描述一个-abi-接口"}},[t._v("#")]),t._v(" "),a("div",{staticClass:"biaoti2"}),t._v(" js 描述一个 abi 接口")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"constant"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数内容操作氛围, constant 常量, true 表示当前函数是只读的, 不会修改状态变量")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"inputs"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表示函数的传参描述")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数的名称")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"address"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//参数的类型    ")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mint"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数的名称")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"outputs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表示函数的返回参数描述")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数的名称")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"address"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//参数的类型    ")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"payable"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表示当前函数不是 payable 类型的")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stateMuttability"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"view"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数的内容操作范围")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数的类型，取值分别是普通函数 function, 构造函数 constructor , 事件函数 event ")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);