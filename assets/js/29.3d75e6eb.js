(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{406:function(t,e,a){"use strict";a.r(e);var v=a(46),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"命名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[t._v("#")]),t._v(" 命名规范")]),t._v(" "),a("h4",{attrs:{id:"标识符的的命名规范是一个团队的默契准则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标识符的的命名规范是一个团队的默契准则"}},[t._v("#")]),t._v(" "),a("div",{staticClass:"biaoti2"}),t._v(" 标识符的的命名规范是一个团队的默契准则")]),t._v(" "),a("blockquote",[a("p",[t._v("在为类、对象、函数、变量命名标识符时，是有一个命名规范来约束，为了一段代码带来可读性。在 kotlin 中也和 java 一样采用驼峰命名法，除了\n包和编译期常量（const val）为，kotlin 中的其他命名都是采用驼峰命名法。")]),t._v(" "),a("blockquote",[a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("命名")]),t._v(" "),a("th",[t._v("命名说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("类与接口")]),t._v(" "),a("td",[t._v("采用大驼峰命名, 编写法如：SplitViewController")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("文件名")]),t._v(" "),a("td",[t._v("采用大驼峰命名, 编写法如：BlockOperation.kt")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("变量与函数")]),t._v(" "),a("td",[t._v("采用小驼峰命名, 编写法如：numberColor")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("常量")]),t._v(" "),a("td",[t._v("字母全是大写，如是多个单词组成，中间则用下划线分隔，编写法如: NUMBER_COUNT")])])])])])]),t._v(" "),a("h2",{attrs:{id:"注释规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释规范"}},[t._v("#")]),t._v(" 注释规范")]),t._v(" "),a("h4",{attrs:{id:"注释是为了表达标识符的含义更加明确与明了"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释是为了表达标识符的含义更加明确与明了"}},[t._v("#")]),t._v(" "),a("div",{staticClass:"biaoti2"}),t._v(" 注释是为了表达标识符的含义更加明确与明了")]),t._v(" "),a("blockquote",[a("h4",{attrs:{id:"文件注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件注释"}},[t._v("#")]),t._v(" 文件注释")]),t._v(" "),a("blockquote",[a("p",[t._v("文件注释就是在文件的开头添加一段注释，这段注释通常包含以下信息: 版权信息、文件名、所在模块、作者信息、历史版本信息、文件内容与作用")])])]),t._v(" "),a("blockquote",[a("h4",{attrs:{id:"注解标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注解标签"}},[t._v("#")]),t._v(" 注解标签")]),t._v(" "),a("blockquote",[a("p",[t._v("注解标签是用于表明类，函数的功能说明，可以通过工具生成 html 文档")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("注解")]),t._v(" "),a("th",[t._v("注解说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("@author")]),t._v(" "),a("td",[t._v("使用在类或接口上，说明当前类或接口的作者")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("@deprecated")]),t._v(" "),a("td",[t._v("使用在类或接口、成员函数上，表示当前的类或接口、成员函数已废弃")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("@parm")]),t._v(" "),a("td",[t._v("使用在函数的参数，对当前参数的说明")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("@return")]),t._v(" "),a("td",[t._v("说明返回值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("@exception")]),t._v(" "),a("td",[t._v("说明函数抛出的异常类")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("@version")]),t._v(" "),a("td",[t._v("说明类或接口的版本信息")])])])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);