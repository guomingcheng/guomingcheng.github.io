(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{385:function(a,t,n){"use strict";n.r(t);var s=n(46),l=Object(s.a)({},(function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h2",{attrs:{id:"学习多线程之前的需要了解的基础概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#学习多线程之前的需要了解的基础概念"}},[a._v("#")]),a._v(" 学习多线程之前的需要了解的基础概念")]),a._v(" "),n("ul",[n("li",[n("p",[n("span",{attrs:{id:"gonglian"}},[a._v("CPU 核心数与线程数的关系")])]),a._v(" "),n("span",{staticStyle:{"font-size":"13px"}},[a._v("\n  需要知道，因因特尔提供超线程的概念，直到现在的核心数与线程数是 1 : 2 的关系了，以前的都是 1 : 1 \n     的 \n ")])]),a._v(" "),n("li",[n("p",[n("span",{attrs:{id:"gonglian"}},[a._v("CUP 时间片轮转机制")])]),a._v(" "),n("span",{staticStyle:{"font-size":"13px"}},[a._v("\n  当我们打开很多的程序时，不会察觉到 CPU 不够用，是因为操作系统使用了《CUP 时间片轮转机制算法》，\n      为某个线程或进程分配一个时间片，这是我们人类无法感觉到的。当一个线程执行完后，操作系统会把CPU\n      资源转换给别的线程使用，这种转换也称为《上下文切换》（也称为 RR 调度），这切换耗费的是 5000 到 20000 的时钟周期。\n      也就说，CUP 资源百分之二十是浪费在上下文切换中。\n  ")])]),a._v(" "),n("li",[n("p",[n("span",{attrs:{id:"gonglian"}},[a._v("进程与线程的关系")])]),a._v(" "),n("span",{staticStyle:{"font-size":"13px"}},[n("ul",[n("li",[n("p",[a._v("进程:  是程序运行分配资源最小的单位，一个进程内部可以包含很多个线程，而线程之间都是共享进程的 CPU 资源")])]),a._v(" "),n("li",[n("p",[a._v("线程:  是 CPU 最小调度单位，线程是没有 CPU 资源的，需要依赖于进程的资源分配，才会被 CUP 调度")])])])])]),a._v(" "),n("li",[n("p",[n("span",{attrs:{id:"gonglian"}},[a._v("并行与并发的概念")])]),a._v(" "),n("span",{staticStyle:{"font-size":"13px"}},[a._v("\n并行是同一时刻处理多少事件就是多少并行，假如一个银行有 5 窗口可容纳 5 个人办事，那么就是并行五。并发是依赖于时间\n单位，如果每个窗口 30 秒处理完用户的事情。那么一分钟的时间，并发数是 10。\n ")])])]),a._v(" "),n("h2",{attrs:{id:"天生就是多线程-java-程序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#天生就是多线程-java-程序"}},[a._v("#")]),a._v(" 天生就是多线程 java 程序")]),a._v(" "),n("p",[a._v("通过下面的代码来看，就是紧运行一个简单 main 程序，都有着 6 个线程开启。这就说明 java 天生就是一个多线程的程序\n"),n("img",{attrs:{src:"/img/java/%E5%9F%BA%E7%A1%80/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-01.png",alt:"An image"}})]),a._v(" "),n("h2",{attrs:{id:"类thread、接口runnbale、接口callbale"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类thread、接口runnbale、接口callbale"}},[a._v("#")]),a._v(" 类Thread、接口Runnbale、接口Callbale")])])}),[],!1,null,null,null);t.default=l.exports}}]);